---
layout: base.njk
section: cours
---
<div class="page-container">
  <article class="cours">

    <h1>{{ title }}</h1>
    <aside></aside>
    <p>
      <time datetime="{{ date | machineDate }}">{{ date | readableDate }}</time>
    </p>
    <hr/>

{{ content | safe | replace("<table>", "<figure>") | replace("</table>", "</figure>")
                       | replace("<em>", "<figcaption>") | replace("</em>", "</figcaption>")
                       | replace("../","../../") | replace("•","<br>") | replace("˙","'") }}


    {% if tags %}
      <p class="tag-list">
      {% for tag in tags %}
        {%- if tag != "post" -%}
          {% set tagUrl %}/tags/{{ tag }}/{% endset %}
          <a class="tag" href="{{ tagUrl | url }}" rel="tag">{{ tag }}</a>
        {%- endif -%}
      {% endfor %}
      </p>
    {% endif %}

  </article>

  <nav>
    <a href="{{ '/blog/' | url }}">← View All Articles</a>
  </nav>
</div>

<script>
  const headings = Array.from(document.getElementsByTagName("h2"));
const aside = document.querySelector("aside");
const ul = document.createElement("ul");
aside.appendChild(ul);
headings.map((heading) => {
    const id = heading.innerText.toLowerCase().replaceAll(" ", "_");
    heading.setAttribute("id", id);
    const anchorElement = `<a href="#${id}">${heading.textContent}</a>`;
    const keyPointer = `<li>${anchorElement}</li>`;
    ul.insertAdjacentHTML("beforeend", keyPointer);
});
const tocAnchors = aside.querySelectorAll("a");
const obFunc = (entries) => {
    entries.forEach((entry) => {
        if (entry.isIntersecting) {
            const index = headings.indexOf(entry.target);
            tocAnchors.forEach((tab) => {
                tab.classList.remove("active");
            });
            tocAnchors[index].classList.add("active");
            tocAnchors[index].scrollIntoView({
                block: "nearest",
                inline: "nearest"
            });
        }
    });
};
const obOption = {
    rootMargin: "-30px 0% -77%",
    threshold: 1
};
const observer = new IntersectionObserver(obFunc, obOption);
headings.forEach((hTwo) => observer.observe(hTwo));
</script>
<style>
  nav {
        padding: 16px;
        background-color: rgba(1, 1, 1, 0.2);
        align-self: start;
        position: sticky;
        top: 10px;
        border-radius: 0.2em;
        ul {
          margin: 0;
          padding: 0;
          list-style: none;
          li {
            padding: 0.15em;
            a {
              color: inherit;
              text-transform: none;
              display: inline-block;
              transform-origin: left;
              transition: transform 0.1s linear;
              &.active {
                font-weight: 600;
                transform: scale(1.1);
              }
            }
          }
        }
      }

    
</style>

